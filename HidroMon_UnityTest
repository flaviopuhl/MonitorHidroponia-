
//DHT 11

/*
#include "DHT.h"        // including the library of DHT11 temperature and humidity sensor
#define DHTTYPE DHT11   // DHT 11

#define dht_dpin 0
DHT dht(dht_dpin, DHTTYPE); 
void setup(void)
{ 
  dht.begin();
  Serial.begin(9600);
  Serial.println("Humidity and temperature\n\n");
  delay(700);

}
void loop() {
    float h = dht.readHumidity();
    float t = dht.readTemperature();         
    Serial.print("Current humidity = ");
    Serial.print(h);
    Serial.print("%  ");
    Serial.print("temperature = ");
    Serial.print(t); 
    Serial.println("C  ");
  delay(800);
}

*/

//DS18B20

/*
#include <OneWire.h>
#include <DallasTemperature.h>

// Data wire is plugged into pin D1 on the ESP8266 12-E - GPIO 5
#define ONE_WIRE_BUS 5

// Setup a oneWire instance to communicate with any OneWire devices (not just Maxim/Dallas temperature ICs)
OneWire oneWire(ONE_WIRE_BUS);

// Pass our oneWire reference to Dallas Temperature. 
DallasTemperature DS18B20(&oneWire);
char temperatureCString[7];
char temperatureFString[7];


// only runs once on boot
void setup() {
  // Initializing serial port for debugging purposes
  Serial.begin(9600);
  delay(10);

  DS18B20.begin(); // IC Default 9 bit. If you have troubles consider upping it 12. Ups the delay giving the IC more time to process the temperature measurement
  
  }
  
 void getTemperature() {
  float tempC;
  float tempF;
  do {
    DS18B20.requestTemperatures(); 
    tempC = DS18B20.getTempCByIndex(0);
    dtostrf(tempC, 2, 2, temperatureCString);
    tempF = DS18B20.getTempFByIndex(0);
    dtostrf(tempF, 3, 2, temperatureFString);
    delay(100);
  } while (tempC == 85.0 || tempC == (-127.0));
}

// runs over and over again
void loop() {
  
  
            getTemperature();
            Serial.print("temperature = ");
            Serial.print(temperatureCString); 
            Serial.println("C  ");        
}  
*/

//PWM

/*
//int LedPin = 14; //D5 Green
//int LedPin = 12; //D6 Red
int LedPin = 13; //D7 Blue

void setup() { 
  pinMode(LedPin, OUTPUT);
}

void loop() {

  // Turn LED OFF
  
  analogWrite(LedPin, 0);   // turn the LED on (HIGH is the voltage level)
  delay(500);              // wait for a second

  // Turn LED on: 25 Percent Intensity

  analogWrite(LedPin, 255);   // turn the LED on (HIGH is the voltage level)
  delay(500);              // wait for a second

  // Turn LED on: 25 Percent Intensity
  
  analogWrite(LedPin, 512);   // turn the LED on (HIGH is the voltage level)
  delay(500);              // wait for a second

  // Turn LED on: 75 Percent Intensity

  analogWrite(LedPin, 767);   // turn the LED on (HIGH is the voltage level)
  delay(500);              // wait for a second

   // Turn LED on: 100 Percent Intensity
  
  analogWrite(LedPin, 1023);    // turn the LED off by making the voltage LOW
  delay(500);              // wait for a second  
}

*/
